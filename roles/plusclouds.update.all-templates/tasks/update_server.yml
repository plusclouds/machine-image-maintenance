---
- name: Get VM informations
  uri:
    url: "{{leo_url}}/v2/iaas/virtual-machines/{{ cloned_vm.json.data.id }}"
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200
    timeout: 300
  register: cloned_vm

- name: Get Update OS role
  uri:
    url: "{{leo_url}}/v2/ansible/roles?name=plusclouds.os.update"
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200
    timeout: 300
  register: update_role

- name: Debug Roles
  debug:
    var: update_role

- name: Execute Update OS role in server
  uri:
    url: "{{leo_url}}/v2/ansible/roles/{{ update_role.json.data.0.id }}/execute"
    method: POST
    headers:
      Authorization: "Bearer {{ user_token }}"
    body: "
ip={{cloned_vm.json.data.connectionParameters.data.0.ip_addr}}&
port=22&
username={{cloned_vm.json.data.username}}&
password={{cloned_vm.json.data.password}}&
become=1&
isSync=1&
config={}&
delete_after_run=0"
    return_content: yes
    status_code: 200, 201, 204
    timeout: 900
#    with_items: "{{ cloned_vm.json.data }}"
  register: playbook_execution
  ignore_errors: true

- debug:
    var: ansible_output

- name: Wait until the procedure is executed
  uri:
    url: "{{leo_url}}/v2/ansible/playbook/{{ playbook_execution.json.data.id }}/executions"
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200, 201, 404
    timeout: 300
  register: playbook_execution_output
  until: playbook_execution_output.status == 200
  retries: 100
  delay: 2
  ignore_errors: yes

- debug:
    var: playbook_execution_output

- name: Wait until the execution returns a result
  uri:
    url: "{{leo_url}}/v2/ansible/playbook/{{ playbook_execution.json.data.id }}/executions"
    method: GET
    headers:
      Authorization: "Bearer {{ user_token }}"
    return_content: yes
    status_code: 200, 201, 404
    timeout: 300
  register: playbook_execution_output
  until: "{{playbook_execution_output.json.data.0.execution_total_time|int > 0 }}"
  retries: 100
  delay: 2
  ignore_errors: yes

- debug:
    var: playbook_execution_output

- set_fact:
    result_failed: "{{ playbook_execution_output.json.data.0.result_failed | int }}"

- name: Create issue to gitlab
  uri:
    url: "{{ gitlab_url }}/api/v4/projects/{{ gitlab_project_id }}/issues"
    method: POST
    headers:
      PRIVATE-TOKEN: "{{ gitlab_token }}"
    body: "title=Update OS problem: {{ template_id }}&description=The update OS is not running properly for this template. You can check the
     result of the execution from the playbook executions endpoint. The playbook execution id is: {{ playbook_execution.json.data.id }}&assignee_ids={{ gitlab_assignee_id }}"
    return_content: yes
    status_code: 201
    timeout: 300
  delegate_to: localhost
  register: gitlab_result
  when: playbook_execution_output.json.data.0.result_failed|int == 1

- name: Create issue to gitlab
  uri:
    url: "{{ gitlab_url }}/api/v4/projects/{{ gitlab_project_id }}/issues"
    method: POST
    headers:
      PRIVATE-TOKEN: "{{ gitlab_token }}"
    body: "title=Update OS problem: {{ template_id }}&description=The update role ran on this server but nothing changed.
    The playbook execution id is: {{ playbook_execution.json.data.id }}&assignee_ids={{ gitlab_assignee_id }}"
    return_content: yes
    status_code: 201
    timeout: 300
  delegate_to: localhost
  register: gitlab_result
  when: playbook_execution_output.json.data.0.result_ok|int == 0 and playbook_execution_output.json.data.0.result_changed|int == 0

- name: Create issue to gitlab
  uri:
    url: "{{ gitlab_url }}/api/v4/projects/{{ gitlab_project_id }}/issues"
    method: POST
    headers:
      PRIVATE-TOKEN: "{{ gitlab_token }}"
    body: "title=Cannot reach OS problem: {{ template_id }}&description=I tried to reach the server but cannot reach. There can be an SSH error.
     The playbook execution id is: {{ playbook_execution.json.data.id }}&assignee_ids={{ gitlab_assignee_id }}"
    return_content: yes
    status_code: 201
    timeout: 300
  delegate_to: localhost
  register: gitlab_result
  when: playbook_execution_output.json.data.0.result_unreachable|int == 1